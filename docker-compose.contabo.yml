version: '3.8'

services:
  # PostgreSQL optimizado para CONTABO SSD
  postgres:
    image: postgres:15-alpine
    container_name: lens-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: lens_db
      POSTGRES_USER: lens
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      # CONTABO SSD Optimizations
      POSTGRES_SHARED_BUFFERS: 256MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 1GB
      POSTGRES_MAINTENANCE_WORK_MEM: 64MB
      POSTGRES_CHECKPOINT_COMPLETION_TARGET: 0.9
      POSTGRES_WAL_BUFFERS: 16MB
      POSTGRES_DEFAULT_STATISTICS_TARGET: 100
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - lens-network
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lens -d lens_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis optimizado para CONTABO
  redis:
    image: redis:7-alpine
    container_name: lens-redis
    restart: unless-stopped
    command: >
      redis-server
      --appendonly yes
      --requirepass ${REDIS_PASSWORD}
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    volumes:
      - redis_data:/data
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      - lens-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # LENS App optimizado para CONTABO
  lens-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lens-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://lens:${DB_PASSWORD}@postgres:5432/lens_db
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - TMDB_API_KEY=${TMDB_API_KEY}
      - OMDB_API_KEY=${OMDB_API_KEY}
      - PORT=3001
      # CONTABO Performance Settings
      - CLUSTER_WORKERS=4
      - MAX_CONCURRENT_SCANS=4
      - CACHE_TTL=86400
      - SCAN_INTERVAL=3600
    ports:
      - "127.0.0.1:3001:3001"
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - lens-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 1G
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx optimizado para CONTABO bandwidth
  nginx:
    image: nginx:alpine
    container_name: lens-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.contabo.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    networks:
      - lens-network
    depends_on:
      - lens-app
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 64M

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  lens-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16